// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SearchMode
List SearchMode(NumericMatrix mat, NumericMatrix bg_mean, NumericMatrix bg_sd, int K, int max_iter, double tol, NumericVector p, NumericMatrix q, NumericVector theta1, NumericVector sigma1);
RcppExport SEXP EIA_SearchMode(SEXP matSEXP, SEXP bg_meanSEXP, SEXP bg_sdSEXP, SEXP KSEXP, SEXP max_iterSEXP, SEXP tolSEXP, SEXP pSEXP, SEXP qSEXP, SEXP theta1SEXP, SEXP sigma1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_mean(bg_meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_sd(bg_sdSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma1(sigma1SEXP);
    rcpp_result_gen = Rcpp::wrap(SearchMode(mat, bg_mean, bg_sd, K, max_iter, tol, p, q, theta1, sigma1));
    return rcpp_result_gen;
END_RCPP
}
// calLikeIso
NumericMatrix calLikeIso(NumericMatrix mat, NumericVector p, NumericMatrix q, NumericMatrix bg_mean, NumericMatrix bg_sd, NumericVector theta1, NumericVector sigma1);
RcppExport SEXP EIA_calLikeIso(SEXP matSEXP, SEXP pSEXP, SEXP qSEXP, SEXP bg_meanSEXP, SEXP bg_sdSEXP, SEXP theta1SEXP, SEXP sigma1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_mean(bg_meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_sd(bg_sdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma1(sigma1SEXP);
    rcpp_result_gen = Rcpp::wrap(calLikeIso(mat, p, q, bg_mean, bg_sd, theta1, sigma1));
    return rcpp_result_gen;
END_RCPP
}
// calPostProb
List calPostProb(NumericMatrix mat, NumericVector p, NumericMatrix q, NumericMatrix bg_mean, NumericMatrix bg_sd, NumericVector theta1, NumericVector sigma1);
RcppExport SEXP EIA_calPostProb(SEXP matSEXP, SEXP pSEXP, SEXP qSEXP, SEXP bg_meanSEXP, SEXP bg_sdSEXP, SEXP theta1SEXP, SEXP sigma1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_mean(bg_meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bg_sd(bg_sdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma1(sigma1SEXP);
    rcpp_result_gen = Rcpp::wrap(calPostProb(mat, p, q, bg_mean, bg_sd, theta1, sigma1));
    return rcpp_result_gen;
END_RCPP
}
